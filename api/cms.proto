syntax = "proto3";
package api;
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
option go_package = "lin-cms-go/api";

service Cms {
  rpc Ping(google.protobuf.Empty) returns (PingReply) {
    option (google.api.http) = {
      get : "/ping"
    };
  }
  rpc Login(LoginRequest) returns (LoginReply) {
    option (google.api.http) = {
      post : "/cms/user/login"
      body : "*"
    };
  }
  rpc CreateBook(CreateBookRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/cms/book"
      body : "*"
    };
  }
  rpc ListBook(PageRequest) returns (ListBookReply) {
    option (google.api.http) = {
      get : "/cms/book"
    };
  }
  rpc GetBook(IDRequest) returns (GetBookReply) {
    option (google.api.http) = {
      get : "/cms/book/{id}"
    };
  }
  rpc UpdateBook(UpdateBookRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/cms/book/{id}"
      body : "*"
    };
  }
  rpc DeleteBook(IDRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/cms/book/{id}"
    };
  }
  rpc Upload(UploadRequest) returns (UploadReply) {
    option (google.api.http) = {
      post : "/cms/file"
      body : "*"
    };
  }

  rpc CreateUser(CreateUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/cms/user/register"
      body : "*"
    };
  }
  rpc UpdateMe(UpdateMeRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/cms/user"
      body : "*"
    };
  }
  rpc UpdateMyPassword(UpdateMyPasswordRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/cms/user/change_password"
      body : "*"
    };
  }
  rpc ListMyPermission(google.protobuf.Empty) returns (ListMyPermissionReply) {
    option (google.api.http) = {
      get : "/cms/user/permissions"
    };
  }
  rpc GetMyInfomation(google.protobuf.Empty) returns (GetMyInfomationReply) {
    option (google.api.http) = {
      get : "/cms/user/information"
    };
  }

  rpc ListPermission(google.protobuf.Empty) returns (ListPermissionReply) {
    option (google.api.http) = {
      get : "/cms/admin/permissions"
    };
  }
  rpc ListUser(ListUserRequest) returns (ListUserReply) {
    option (google.api.http) = {
      get : "/cms/admin/users"
    };
  }
  rpc UpdateUserPassword(UpdateUserPasswordRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/cms/admin/user/{id}/password"
      body : "*"
    };
  }
  rpc DeleteUser(IDRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/cms/admin/user/{id}"
    };
  }
  rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/cms/admin/user/{id}"
      body : "*"
    };
  }
  rpc GetUser(IDRequest) returns (GetUserReply) {
    option (google.api.http) = {
      get : "/cms/admin/user/{id}"
    };
  }
  rpc GetGroup(IDRequest) returns (GetGroupReply) {
    option (google.api.http) = {
      get : "/cms/admin/group/{id}"
    };
  }
  rpc UpdateGroup(UpdateGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/cms/admin/group/{id}"
      body : "*"
    };
  }

  rpc DeleteGroup(IDRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/cms/admin/group/{id}"
    };
  }
  rpc CreateGroup(CreateGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/cms/admin/group"
      body : "*"
    };
  }
  rpc ListGroup(google.protobuf.Empty) returns (ListGroupReply) {
    option (google.api.http) = {
      get : "/cms/admin/groups"
    };
  }

  rpc DispatchPermission(DispatchPermissionRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/cms/admin/permission/dispatch"
      body : "*"
    };
  }
  rpc DispatchPermissions(DispatchPermissionsRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/cms/admin/permissions/dispatch"
      body : "*"
    };
  }
  rpc RemovePermission(RemovePermissionRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/cms/admin/permissions/remove"
      body : "*"
    };
  }
  rpc ListLog(PageRequest) returns (ListLogReply) {
    option (google.api.http) = {
      get : "/cms/log"
    };
  }
  rpc SearchLog(SearchLogRequest) returns (ListLogReply) {
    option (google.api.http) = {
      get : "/cms/log/search"
    };
  }
  rpc ListLogUser(PageRequest) returns (ListLogUserReply) {
    option (google.api.http) = {
      get : "/cms/log/users"
    };
  }
}
message DispatchPermissionsRequest {
  int32 groupId = 1;
  repeated int32 permissionIds = 2;
}
message DispatchPermissionRequest {
  int32 groupId = 1;
  int32 permissionId = 2;
}
message RemovePermissionRequest {
  int32 groupId = 1;
  repeated int32 permissionIds = 2;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}
message CreateUserRequest {
  string username = 1;
  string phone = 2;
  string password = 3;

  int32 groupId = 5;
}
message UpdateMeRequest {
  string nickname = 1;
  string avatar = 2;
  string email = 3;
}
message UpdateUserPasswordRequest {
  int32 id = 1;
  string oldPassword = 2;
  string newPassword = 3;
}

message ListLogRequest {
  string start = 1;
  string end = 2;
  int32 page = 3;
  int32 size = 4;
  string name = 5;
}
message SearchLogRequest {
  string keyword = 1;
  string start = 2;
  string end = 3;
  int32 page = 4;
  int32 size = 5;
  string name = 6;
}

message ListUserRequest { int32 groupId = 1; }

message CreateBookRequest {
  string title = 1;
  string author = 2;
  string summary = 3;
  string image = 4;
}
message UpdateBookRequest {
  int64 id = 1;
  string title = 2;
  string author = 3;
  string summary = 4;
  string image = 5;
}

message UpdateGroupRequest {
  int64 id = 1;
  string name = 2;
  string info = 3;
}
message GetGroupReply {}
message GetUserReply {}
message GetMyInfomationReply {}
message ListMyPermissionReply {}

message UpdateUserRequest {
  int64 id = 1;
  repeated int64 group_ids = 2;
}

message UpdateMyPasswordRequest {}

message ListUserReply { repeated User users = 1; }

message ListGroupReply {}
message User { int64 id = 1; }
message Permission { int64 id = 1; }
message ListPermissionReply { repeated Permission permissions = 1; }

message CreateBookReply { int64 id = 1; }
message Book { 
  int64 id = 1; 
  string title = 2;
  string author = 3;
  string summary = 4;
  string image = 5;
  string created_at = 6;
}
message ListBookReply {
  repeated Book list = 1;
  int64 total = 2;
}
message GetBookReply { Book book = 1; }

message UploadRequest { string file = 1; }
message UploadReply { string url = 1; }

message ListLogUserReply { repeated string users = 1; }
message CreateGroupRequest {
  string name = 1;
  string info = 2;
  repeated int64 permission_ids = 3;
}

message ListLogReply {}

message PageRequest {
  int32 page = 1;
  int32 size = 2;
}
message IDRequest { int64 id = 1; }
message PingReply { string message = 1; }

message LoginReply {
  string accessToken = 1;
  string refreshToken = 2;
}