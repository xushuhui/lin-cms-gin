// Code generated by entc, DO NOT EDIT.

package lingroup

import (
	"time"
)

const (
	// Label holds the string label denoting the lingroup type in the database.
	Label = "lin_group"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldDeleteTime holds the string denoting the delete_time field in the database.
	FieldDeleteTime = "delete_time"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldInfo holds the string denoting the info field in the database.
	FieldInfo = "info"
	// FieldLevel holds the string denoting the level field in the database.
	FieldLevel = "level"
	// EdgeLinUser holds the string denoting the lin_user edge name in mutations.
	EdgeLinUser = "lin_user"
	// EdgeLinPermission holds the string denoting the lin_permission edge name in mutations.
	EdgeLinPermission = "lin_permission"
	// Table holds the table name of the lingroup in the database.
	Table = "lin_group"
	// LinUserTable is the table that holds the lin_user relation/edge. The primary key declared below.
	LinUserTable = "lin_user_group"
	// LinUserInverseTable is the table name for the LinUser entity.
	// It exists in this package in order to avoid circular dependency with the "linuser" package.
	LinUserInverseTable = "lin_user"
	// LinPermissionTable is the table that holds the lin_permission relation/edge. The primary key declared below.
	LinPermissionTable = "lin_group_permission"
	// LinPermissionInverseTable is the table name for the LinPermission entity.
	// It exists in this package in order to avoid circular dependency with the "linpermission" package.
	LinPermissionInverseTable = "lin_permission"
)

// Columns holds all SQL columns for lingroup fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldDeleteTime,
	FieldName,
	FieldInfo,
	FieldLevel,
}

var (
	// LinUserPrimaryKey and LinUserColumn2 are the table columns denoting the
	// primary key for the lin_user relation (M2M).
	LinUserPrimaryKey = []string{"group_id", "user_id"}
	// LinPermissionPrimaryKey and LinPermissionColumn2 are the table columns denoting the
	// primary key for the lin_permission relation (M2M).
	LinPermissionPrimaryKey = []string{"permission_id", "group_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultDeleteTime holds the default value on creation for the "delete_time" field.
	DefaultDeleteTime func() time.Time
)
