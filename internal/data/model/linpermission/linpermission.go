// Code generated by entc, DO NOT EDIT.

package linpermission

const (
	// Label holds the string label denoting the linpermission type in the database.
	Label = "lin_permission"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldModule holds the string denoting the module field in the database.
	FieldModule = "module"
	// FieldMount holds the string denoting the mount field in the database.
	FieldMount = "mount"
	// EdgeLinGroup holds the string denoting the lin_group edge name in mutations.
	EdgeLinGroup = "lin_group"
	// Table holds the table name of the linpermission in the database.
	Table = "lin_permission"
	// LinGroupTable is the table that holds the lin_group relation/edge. The primary key declared below.
	LinGroupTable = "lin_group_permission"
	// LinGroupInverseTable is the table name for the LinGroup entity.
	// It exists in this package in order to avoid circular dependency with the "lingroup" package.
	LinGroupInverseTable = "lin_group"
)

// Columns holds all SQL columns for linpermission fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldModule,
	FieldMount,
}

var (
	// LinGroupPrimaryKey and LinGroupColumn2 are the table columns denoting the
	// primary key for the lin_group relation (M2M).
	LinGroupPrimaryKey = []string{"permission_id", "group_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
