// Code generated by entc, DO NOT EDIT.

package linuser

import (
	"time"
)

const (
	// Label holds the string label denoting the linuser type in the database.
	Label = "lin_user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldDeleteTime holds the string denoting the delete_time field in the database.
	FieldDeleteTime = "delete_time"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldNickname holds the string denoting the nickname field in the database.
	FieldNickname = "nickname"
	// FieldAvatar holds the string denoting the avatar field in the database.
	FieldAvatar = "avatar"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// EdgeLinUserIdentiy holds the string denoting the lin_user_identiy edge name in mutations.
	EdgeLinUserIdentiy = "lin_user_identiy"
	// EdgeLinGroup holds the string denoting the lin_group edge name in mutations.
	EdgeLinGroup = "lin_group"
	// Table holds the table name of the linuser in the database.
	Table = "lin_user"
	// LinUserIdentiyTable is the table that holds the lin_user_identiy relation/edge.
	LinUserIdentiyTable = "lin_user_identiy"
	// LinUserIdentiyInverseTable is the table name for the LinUserIdentiy entity.
	// It exists in this package in order to avoid circular dependency with the "linuseridentiy" package.
	LinUserIdentiyInverseTable = "lin_user_identiy"
	// LinUserIdentiyColumn is the table column denoting the lin_user_identiy relation/edge.
	LinUserIdentiyColumn = "lin_user_lin_user_identiy"
	// LinGroupTable is the table that holds the lin_group relation/edge. The primary key declared below.
	LinGroupTable = "lin_user_group"
	// LinGroupInverseTable is the table name for the LinGroup entity.
	// It exists in this package in order to avoid circular dependency with the "lingroup" package.
	LinGroupInverseTable = "lin_group"
)

// Columns holds all SQL columns for linuser fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldDeleteTime,
	FieldUsername,
	FieldNickname,
	FieldAvatar,
	FieldEmail,
}

var (
	// LinGroupPrimaryKey and LinGroupColumn2 are the table columns denoting the
	// primary key for the lin_group relation (M2M).
	LinGroupPrimaryKey = []string{"group_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultAvatar holds the default value on creation for the "avatar" field.
	DefaultAvatar string
)
